//
// jewel.cikernel
//
// Created by Nathan Taylor on 19 Oct 2018 12:49:45pm
// Copyright Â© 2018 Nathan Taylor. All rights reserved.

kernel vec4 apply(sampler src, sampler image, float sheen, float time, float scatter) {
    vec2 p = destCoord() / samplerSize(image);

    p -= 0.5;
    p /= 1.1;
    p += 0.5;

    vec3 offset = sample(image, samplerTransform(image, p * samplerSize(image))).rgb;
    
    vec2 pos = p;
    // re-center in jewel
    pos *= 0.8;
    pos += 0.1;
    
    
    //
    // pos.x += sin(offset.r) / 5.0;
    // pos.y += sin(offset.g) / 5.0;
    // pos.x = pos.x * sin(offset.r);
    // pos.y *= pos.g;

    pos += (offset.gr - vec2(0.5, 0.5)) / scatter;

    vec3 jewelColor = vec3(offset);
    

    float vector = distance(offset, vec3(0.5 + time * 0.5, 1.0, 1.0));

    vec3 baseColor = sample(src, samplerTransform(src, pos * samplerSize(image))).rgb;

    baseColor = mix(baseColor, vec3(1.0), pow(vector, sheen));

    baseColor = mix(baseColor, offset/* + vec3(0.0, 0.0, 1.0) * time*/, pow(vector, 3.0));

    // return texelFetch(image, vec2i(0, 0));
    // return read(image, vec2i(0, 0));
    return vec4(baseColor, 1.0);
    // return vec4(jewelColor, 1.0);
}
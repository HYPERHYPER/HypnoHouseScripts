//
// blobWarp.cikernel
// Scanner Warp
//
// Created by Mena Sachdev on 3 Apr 2019 3:01:54pm
// Copyright Â© 2019 Mena Sachdev. All rights reserved.

float random (in vec2 st) { 
    return fract(st.x * st.y *1.989* 57.881);

}

float noise (in vec2 st) {
    vec2 i = floor(st);
    vec2 f = fract(st);

    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));

    vec2 u = f * f * (3.0 - 2.0 * f);

    return mix(a, b, u.x) + 
            (c - a)* u.y * (1.0 - u.x) + 
            (d - b) * u.x * u.y;
}

float fbm (in vec2 st) {

  return 1.0 * noise(st);
}

float flow( vec2 p, float time ) {


  vec2 q = vec2( fbm( p + vec2(0.0,0.0) - (time)));

  vec2 r = vec2( fbm( p + 4.0 *  q + vec2(1.7,9.2) + (time)),
                 fbm( p + 4.0 * q + vec2(8.3,2.8) - (time)) );

  return 1.0 * fbm( p + 4.0 * r );
}


kernel vec4 apply (sampler src, float time, float seed) {
    
    vec2 uv = destCoord() / samplerSize(src);
    

    float warp = flow(uv * 1.5, time * 4.0) - 0.2;

    uv -= vec2(0.5);
    uv *= 0.8;
    uv += vec2(warp * 0.25);
    uv += vec2(0.5);

    vec4 a = sample(src, samplerTransform(src, uv * samplerSize(src)));

    return a;

}